/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Jean-Baptiste' at '13/02/17 20:49' with Gradle 2.11
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.11/userguide/tutorial_java_projects.html
 */


buildscript {
    repositories {
//        maven {
//            url "https://plugins.gradle.org/m2/"
//        }
        jcenter()
    }
    dependencies {
        classpath "org.akhikhl.gretty:gretty:1.4.0"
    }
}

apply plugin: "org.akhikhl.gretty"

apply plugin: 'java'
apply plugin: 'war'


// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.14'

    compile "org.springframework:spring-webmvc:$springVersion"
    compile "org.springframework:spring-jdbc:$springVersion"
    compile "com.h2database:h2:$h2Version"
    compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"
    compile "org.apache.commons:commons-lang3:$commonsLangVersion"

    compile "javax.servlet:jstl:$jstlVersion"
    providedCompile "javax.servlet:javax.servlet-api:$servletApiVersion"
    providedCompile "javax.servlet.jsp:jsp-api:$jspApiVersion"
    providedCompile "javax.el:javax.el-api:$jspElVersion"

    testCompile "junit:junit-dep:$junitVersion"
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
}

//ext.pathServer = 'C:\\Users\\Jean-Baptiste\\Serveurs\\wildfly-10.0.0.Final\\standalone\\deployments'

war {
    doLast {
        println " dÃ©ployement dans =>  $pathServer";
    }
    destinationDir file(pathServer)
}


task suppressionWar {
    delete pathServer+ File.separator +tasks['war'].archiveName
}

clean.dependsOn(suppressionWar)


task testP () {
    println pathServer

}


